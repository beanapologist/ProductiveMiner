version: '3.8'

services:
  # TestNet Database
  testnet-db:
    image: postgres:15-alpine
    container_name: testnet-db
    environment:
      POSTGRES_DB: productiveminer_testnet
      POSTGRES_USER: productiveminer
      POSTGRES_PASSWORD: testnet_password
    volumes:
      - testnet-db-data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - testnet-network

  # TestNet Redis
  testnet-redis:
    image: redis:7-alpine
    container_name: testnet-redis
    command: redis-server --requirepass testnet_redis_password
    volumes:
      - testnet-redis-data:/data
    ports:
      - "6379:6379"
    networks:
      - testnet-network

  # TestNet Blockchain Node
  testnet-blockchain:
    image: hyperledger/besu:23.10.1
    container_name: testnet-blockchain
    command: >
      --data-path=/var/lib/besu
      --genesis-file=/config/testnet-genesis.json
      --rpc-http-enabled=true
      --rpc-http-host=0.0.0.0
      --rpc-http-port=8545
      --rpc-http-cors-origins="*"
      --rpc-http-apis=ETH,NET,WEB3,DEBUG,ADMIN
      --host-allowlist="*"
      --miner-enabled=true
      --miner-coinbase=0xFfe7a1c2B61eB2bc64d3932F5Db1DA18CF92fFb9
      --min-gas-price=0
      --logging=INFO
    volumes:
      - testnet-blockchain-data:/var/lib/besu
      - ./config/testnet-genesis.json:/config/testnet-genesis.json
    ports:
      - "8545:8545"
      - "8546:8546"
    networks:
      - testnet-network

  # TestNet Backend API
  testnet-api:
    build:
      context: .
      dockerfile: Dockerfile.adaptive
    container_name: testnet-api
    environment:
      - NODE_ENV=production
      - TESTNET_MODE=true
      - METAMASK_ENABLED=true
      - DATABASE_URL=postgresql://productiveminer:testnet_password@testnet-db:5432/productiveminer_testnet
      - REDIS_URL=redis://:testnet_redis_password@testnet-redis:6379
      - BLOCKCHAIN_URL=http://testnet-blockchain:8545
      - CHAIN_ID=1337
      - NETWORK_ID=9999
      - CURRENCY_SYMBOL=MINED
      - JWT_SECRET=testnet_jwt_secret_key_2024
      - QUANTUM_SECURITY_LEVEL=256
      - MAX_CONCURRENT_SESSIONS=100
      - DEFAULT_DIFFICULTY=25
    volumes:
      - ./config:/app/config
      - ./contracts:/app/contracts
    ports:
      - "3000:3000"
    depends_on:
      - testnet-db
      - testnet-redis
      - testnet-blockchain
    networks:
      - testnet-network

  # TestNet Frontend
  testnet-frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: testnet-frontend
    environment:
      - REACT_APP_API_URL=http://localhost:3000
      - REACT_APP_BLOCKCHAIN_URL=http://localhost:8545
      - REACT_APP_CHAIN_ID=1337
      - REACT_APP_NETWORK_NAME=ProductiveMiner TestNet
      - REACT_APP_CURRENCY_SYMBOL=MINED
      - REACT_APP_METAMASK_ENABLED=true
    ports:
      - "3001:80"
    depends_on:
      - testnet-api
    networks:
      - testnet-network

  # TestNet Faucet
  testnet-faucet:
    build:
      context: .
      dockerfile: Dockerfile.adaptive
    container_name: testnet-faucet
    command: node scripts/testnet-faucet.js
    environment:
      - NODE_ENV=production
      - TESTNET_MODE=true
      - BLOCKCHAIN_URL=http://testnet-blockchain:8545
      - FAUCET_ENABLED=true
      - FAUCET_AMOUNT=1000000000000000000000
      - FAUCET_COOLDOWN=3600
    volumes:
      - ./config/testnet-faucet.json:/app/config/testnet-faucet.json
    depends_on:
      - testnet-blockchain
    networks:
      - testnet-network

  # TestNet Monitoring
  testnet-prometheus:
    image: prom/prometheus:latest
    container_name: testnet-prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    volumes:
      - ./monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - testnet-prometheus-data:/prometheus
    ports:
      - "9090:9090"
    networks:
      - testnet-network

  testnet-grafana:
    image: grafana/grafana:latest
    container_name: testnet-grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=testnet_admin
    volumes:
      - testnet-grafana-data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
    ports:
      - "3002:3000"
    depends_on:
      - testnet-prometheus
    networks:
      - testnet-network

volumes:
  testnet-db-data:
  testnet-redis-data:
  testnet-blockchain-data:
  testnet-prometheus-data:
  testnet-grafana-data:

networks:
  testnet-network:
    driver: bridge 